{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"EO Application Packages - hands-on","text":"<p>The OGC Best Practice for Earth Observation Application Package describes how to package EO computational workflows targeting their execution automation, scalability, reusability and portability while also being workflow-engine and vendor neutral.</p> <p>This hands-on training targets EO application developers and provides an introduction to the Earth Observation Application Package concept and a set of real-life exercises running on an Integrated Development Environment running on Binder.</p>"},{"location":"#what-is-an-application-package","title":"What is an Application Package","text":"<p>An Earth Observation Application is set of command-line tools with numeric, textual and EO data parameters organized as a computational workflow</p> <p>An Application Package is a text document that describes the input and output interface of the EO Application and the orchestration of its command-line tools</p> <p>The Application Package guarantees the automation, scalability, reusability, portability of the Application while also being workflow-engine and vendor neutral.</p>"},{"location":"#the-process","title":"The Process","text":"<p>The application (e.g. Python, shell script, C++) is containerized and registered in Container Registry </p> <p>The input and output interface of the application and the orchestration of its command-line tools are described with Common Workflow Language (CWL)</p> <p>The Platform converts the OGC API Processes in a CWL execution request in the computing resources of the selected provider</p> <p>The Application can be deployed in multiple Clouds without lock-in </p>"},{"location":"#execution-scenarios","title":"Execution Scenarios","text":"<p>The  application package used for application testing, validation and deployment &amp; execution in production </p>"},{"location":"#personas","title":"Personas","text":"<ul> <li>Alice to package an application </li> <li>Bob to script the execution of application</li> <li>Eric to deploy an application on Platform</li> </ul>"},{"location":"water-bodies/","title":"Water bodies","text":""},{"location":"water-bodies/#water-bodies-detection-application-package","title":"Water bodies detection Application Package","text":"<p>This Application Package takes as input Copernicus Sentinel-2 data and detects water bodies by applying the Otsu thresholding technique on the Normalized Difference Water Index:</p> <pre><code>graph TB\n  A[STAC Items] --&gt; B\n  A[STAC Items] --&gt; C\nsubgraph Process STAC item\n  B[\"crop(green)\"] --&gt; D[Normalized difference];\n  C[\"crop(nir)\"] --&gt; D[Normalized difference];\n  D --&gt; E[Otsu threshold]\nend\n  E --&gt; F[Create STAC]</code></pre> <ol> <li>Open the Code server IDE interface </li> <li>Go to <code>Terminal</code> to open a new terminal</li> <li>Run the water bodies detection Application Package typing </li> </ol> <pre><code>cwltool --no-container app-package.cwl#water_bodies params.yml &gt; out.json\n</code></pre> <p>Note The flag <code>--no-container</code> is used to instruct the CWL runner to use the local command-line tools instead of using the containers as Binder cannot launch containers.</p> <p>Once completed, there's a folder with the results generated.</p> <p>Inspect the Python command-line tools used by each step of the computational workflow.</p> <p>Once completed, visualize the results with the <code>visualization.ipynb</code> notebook on JupyterLab by running all cells. </p> <p>The notebook parses the results produced looking for the STAC Catalog file <code>catalog.json</code> and add the STAC items' <code>data</code> asset on the map.</p>"},{"location":"execution-scenarios/alice/","title":"Alice","text":""},{"location":"execution-scenarios/alice/#water-bodies-detection-application-package-development-and-test","title":"Water bodies detection Application Package development and test","text":"<p>Alice implements the application package</p> <p></p> <p>This Application Package takes as input Copernicus Sentinel-2 data and detects water bodies by applying the Otsu thresholding technique on the Normalized Difference Water Index (NDWI).</p> <p>The NDWI is calculated with: </p> \\[ NDWI = { (green - nir) \\over (green + nir) }  \\] <p>Typically, NDWI values of water bodies are larger than 0.2 and built-up features have positive values between 0 and 0.2.</p> <p>Vegetation has much smaller NDWI values, which results in distinguishing vegetation from water bodies easier. </p> <p>The NDWI values correspond to the following ranges:</p> Range Description 0,2 - 1 Water surface 0.0 - 0,2 Flooding, humidity -0,3 - 0.0 Moderate drought, non-aqueous surfaces -1 - -0.3 Drought, non-aqueous surfaces <p>To ease the determination of the water surface/non water surface, the Ostu thresholding technique is used. </p> <p>In the simplest form, the Otsu algorithm returns a single intensity threshold that separate pixels into two classes, foreground and background. This threshold is determined by minimizing intra-class intensity variance, or equivalently, by maximizing inter-class variance:</p> <p></p> <p>The Water Bodies detection steps are depicted below:</p> <pre><code>graph TB\n  A[STAC Items] --&gt; B\n  A[STAC Items] --&gt; C\nsubgraph Process STAC item\n  B[\"crop(green)\"] --&gt; D[Normalized difference];\n  C[\"crop(nir)\"] --&gt; D[Normalized difference];\n  D --&gt; E[Otsu threshold]\nend\n  E --&gt; F[Create STAC]</code></pre> <p>The application takes a list of Sentinel-2 STAC items references, applies the crop over the area of interest for the radiometric bands green and NIR, the normalized difference, the Ostu threshold and finaly creates a STAC catalog and items for the generated results.</p> <p>Alice organizes the Application Package to include a macro workflow that reads the list of Sentinel-2 STAC items references, launches a sub-workflow to detect the water bodies and creates the STAC catalog:</p> <p></p> <p>The sub-workflow applies the  <code>crop</code>, <code>Normalized difference</code>, <code>Otsu threshold</code> steps:</p> <p></p> <p>The development and test dataset is made of two Sentinel-2 acquisitions:</p> Acquisitions Date 2021-07-13 2022-05-24 URL S2B_10TFK_20210713_0_L2A S2A_10TFK_20220524_0_L2A Quicklook <p>Alice uses an IDE to implement and test the application. </p> <p>Each <code>Command Line Tool</code> step such as <code>crop</code>, <code>Normalized difference</code>, <code>Otsu threshold</code> and <code>Create STAC</code> runs a Python script in a dedicated container.</p>"},{"location":"execution-scenarios/alice/#hands-on","title":"Hands-on","text":"<p>Once the Code Server instance is up, open a new Terminal and create the Python environments to run the Application Package steps:</p> <p><pre><code>mamba create -c conda-forge -y -p /srv/conda/envs/env_crop  gdal click pystac \nmamba create -c conda-forge -y -p /srv/conda/envs/env_norm_diff click gdal  \nmamba create -c conda-forge -y -p /srv/conda/envs/env_otsu gdal scikit-image click \nmamba create -c conda-forge -y -p /srv/conda/envs/env_stac click pystac python=3.9 pip &amp;&amp; \\\n    /srv/conda/envs/env_stac/bin/pip install rio_stac\nmamba clean --all -f -y\n</code></pre> This configuration step takes a few minutes to complete and prints:</p> <pre><code>jovyan@jupyter-cwl-2dfor-2deo-2dvscode-2dbinder-2dv5n1yyn4:~/ogc-eo-application-package-hands-on/water-bodies$ mamba create -c conda-forge -y -p /srv/conda/envs/env_crop  gdal click pystac \n-forge -y -p /srv/conda/envs/env_norm_diff click gdal  \nmamba create -c conda-forge -y -p /srv/conda/envs/env_otsu gdal scikit-image click \nmamba create -c conda-forge -y -p /srv/conda/envs/env_stac click pystac python=3.9 pip &amp;&amp; \\\n    /srv/conda/envs/env_stac/bin/pip install rio_stac\nmamba clean --all -f -y\n                  __    __    __    __\n                 /  \\  /  \\  /  \\  /  \\\n                /    \\/    \\/    \\/    \\\n\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588/  /\u2588\u2588/  /\u2588\u2588/  /\u2588\u2588/  /\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\n              /  / \\   / \\   / \\   / \\  \\____\n             /  /   \\_/   \\_/   \\_/   \\    o \\__,\n            / _/                       \\_____/  `\n            |/\n        \u2588\u2588\u2588\u2557   \u2588\u2588\u2588\u2557 \u2588\u2588\u2588\u2588\u2588\u2557 \u2588\u2588\u2588\u2557   \u2588\u2588\u2588\u2557\u2588\u2588\u2588\u2588\u2588\u2588\u2557  \u2588\u2588\u2588\u2588\u2588\u2557\n        \u2588\u2588\u2588\u2588\u2557 \u2588\u2588\u2588\u2588\u2551\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\u2588\u2588\u2588\u2588\u2557 \u2588\u2588\u2588\u2588\u2551\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\n        \u2588\u2588\u2554\u2588\u2588\u2588\u2588\u2554\u2588\u2588\u2551\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2551\u2588\u2588\u2554\u2588\u2588\u2588\u2588\u2554\u2588\u2588\u2551\u2588\u2588\u2588\u2588\u2588\u2588\u2554\u255d\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2551\n        \u2588\u2588\u2551\u255a\u2588\u2588\u2554\u255d\u2588\u2588\u2551\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2551\u2588\u2588\u2551\u255a\u2588\u2588\u2554\u255d\u2588\u2588\u2551\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2551\n        \u2588\u2588\u2551 \u255a\u2550\u255d \u2588\u2588\u2551\u2588\u2588\u2551  \u2588\u2588\u2551\u2588\u2588\u2551 \u255a\u2550\u255d \u2588\u2588\u2551\u2588\u2588\u2588\u2588\u2588\u2588\u2554\u255d\u2588\u2588\u2551  \u2588\u2588\u2551\n        \u255a\u2550\u255d     \u255a\u2550\u255d\u255a\u2550\u255d  \u255a\u2550\u255d\u255a\u2550\u255d     \u255a\u2550\u255d\u255a\u2550\u2550\u2550\u2550\u2550\u255d \u255a\u2550\u255d  \u255a\u2550\u255d\n\n        mamba (1.2.0) supported by @QuantStack\n\n        GitHub:  https://github.com/mamba-org/mamba\n        Twitter: https://twitter.com/QuantStack\n\n\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\n...\n\n...\n\nWill remove 1 package cache(s).\n</code></pre>"},{"location":"execution-scenarios/alice/#code-inspection","title":"Code inspection","text":"<p>Get yourself familiar with what the command line tools do when invoked.</p> <ol> <li>Inspect each of the command line tools <code>crop</code>, <code>norm_diff</code>, <code>otsu</code> and <code>stac</code> Python script</li> <li>Inspect each of the <code>Dockerfile</code> </li> </ol>"},{"location":"execution-scenarios/alice/#application-package-execution","title":"Application Package execution","text":"<ol> <li>Go to <code>Terminal</code> to open a new terminal</li> <li>Run the water bodies detection Application Package with: </li> </ol> <pre><code>cwltool --no-container app-package.cwl#water_bodies params.yml &gt; out.json\n</code></pre> <p><code>cwltool</code> is a Common Workflow Language runner. </p> <p>The flag <code>--no-container</code> is used to instruct <code>cwltool</code> to use the local command-line tools instead of using the containers as Binder cannot launch containers.</p> <p><code>app-package.cwl#water_bodies</code> defines the CWL file to execute and instructs <code>cwltool</code> which element to run. Here it's the <code>Workflow</code> with the id <code>water_bodies</code>.</p> <p>The file <code>params.yml</code> contains the parameters:</p> <pre><code>stac_items:\n- \"https://earth-search.aws.element84.com/v0/collections/sentinel-s2-l2a-cogs/items/S2B_10TFK_20210713_0_L2A\"\n- \"https://earth-search.aws.element84.com/v0/collections/sentinel-s2-l2a-cogs/items/S2A_10TFK_20220524_0_L2A\"\n\naoi: \"-121.399,39.834,-120.74,40.472\"\nepsg: \"EPSG:4326\"\n</code></pre> <p>The <code>cwltool</code> execution prints: </p> <pre><code>jovyan@jupyter-cwl-2dfor-2deo-2dvscode-2dbinder-2dv5n1yyn4:~/ogc-eo-application-package-hands-on/water-bodies$ cwltool --no-container app-package.cwl#water_bodies params.yml &gt; out.json\nINFO /srv/conda/envs/notebook/bin/cwltool 3.1.20221201130942\nINFO Resolved 'app-package.cwl#water_bodies' to 'file:///home/jovyan/ogc-eo-application-package-hands-on/water-bodies/app-package.cwl#water_bodies'\nINFO [workflow ] start\nINFO [workflow ] starting step node_water_bodies\nINFO [step node_water_bodies] start\nINFO [workflow node_water_bodies] start\nINFO [workflow node_water_bodies] starting step node_crop\nINFO [step node_crop] start\nINFO [job node_crop] /tmp/hgboee9w$ python \\\n    -m \\\n    app \\\n    --aoi \\\n    -121.399,39.834,-120.74,40.472 \\\n    --band \\\n    green \\\n    --epsg \\\n    EPSG:4326 \\\n    --input-item \\\n    https://earth-search.aws.element84.com/v0/collections/sentinel-s2-l2a-cogs/items/S2B_10TFK_20210713_0_L2A\nINFO [job node_crop] Max memory used: 67MiB\nINFO [job node_crop] completed success\n...\n\n...\nINFO [workflow ] starting step node_stac\nINFO [step node_stac] start\nINFO [job node_stac] /tmp/l9b37lie$ python \\\n    -m \\\n    app \\\n    --input-item \\\n    https://earth-search.aws.element84.com/v0/collections/sentinel-s2-l2a-cogs/items/S2B_10TFK_20210713_0_L2A \\\n    --water-body \\\n    /tmp/3_ithdmj/stg6a24fafc-7f9f-498a-b0c8-259811c7c959/otsu.tif \\\n    --input-item \\\n    https://earth-search.aws.element84.com/v0/collections/sentinel-s2-l2a-cogs/items/S2A_10TFK_20220524_0_L2A \\\n    --water-body \\\n    /tmp/3_ithdmj/stg5a6afa0d-1926-4256-83f1-c5f7ba4edeab/otsu.tif\nINFO [job node_stac] Max memory used: 47MiB\nINFO [job node_stac] completed success\nINFO [step node_stac] completed success\nINFO [workflow ] completed success\nINFO Final process status is success\n</code></pre> <p>Once the workflow execution is completed, there's a folder with the results generated.</p> <p>The JSON file <code>out.json</code> is a manifest containing the listing of the results included in that folder:</p> <pre><code>{\n\"stac_catalog\": {\n\"location\": \"file:///home/jovyan/ogc-eo-application-package-hands-on/water-bodies/l9b37lie\",\n\"basename\": \"l9b37lie\",\n\"class\": \"Directory\",\n\"listing\": [\n{\n\"class\": \"Directory\",\n\"location\": \"file:///home/jovyan/ogc-eo-application-package-hands-on/water-bodies/l9b37lie/S2A_10TFK_20220524_0_L2A\",\n\"basename\": \"S2A_10TFK_20220524_0_L2A\",\n\"listing\": [\n{\n\"class\": \"File\",\n\"location\": \"file:///home/jovyan/ogc-eo-application-package-hands-on/water-bodies/l9b37lie/S2A_10TFK_20220524_0_L2A/S2A_10TFK_20220524_0_L2A.json\",\n\"basename\": \"S2A_10TFK_20220524_0_L2A.json\",\n\"checksum\": \"sha1$de27e30c1e40ac0c2cb41f66f25e0258f4a6fdbc\",\n\"size\": 4870,\n\"path\": \"/home/jovyan/ogc-eo-application-package-hands-on/water-bodies/l9b37lie/S2A_10TFK_20220524_0_L2A/S2A_10TFK_20220524_0_L2A.json\"\n},\n{\n\"class\": \"File\",\n\"location\": \"file:///home/jovyan/ogc-eo-application-package-hands-on/water-bodies/l9b37lie/S2A_10TFK_20220524_0_L2A/otsu.tif\",\n\"basename\": \"otsu.tif\",\n\"checksum\": \"sha1$f8b7daf9c86b0271a813a0948e0edb947e5f2773\",\n\"size\": 175932,\n\"path\": \"/home/jovyan/ogc-eo-application-package-hands-on/water-bodies/l9b37lie/S2A_10TFK_20220524_0_L2A/otsu.tif\"\n}\n],\n\"path\": \"/home/jovyan/ogc-eo-application-package-hands-on/water-bodies/l9b37lie/S2A_10TFK_20220524_0_L2A\"\n},\n{\n\"class\": \"File\",\n\"location\": \"file:///home/jovyan/ogc-eo-application-package-hands-on/water-bodies/l9b37lie/catalog.json\",\n\"basename\": \"catalog.json\",\n\"checksum\": \"sha1$f7214df9b2be4df8b704b4bbe73cdf76b30b0ca6\",\n\"size\": 525,\n\"path\": \"/home/jovyan/ogc-eo-application-package-hands-on/water-bodies/l9b37lie/catalog.json\"\n},\n{\n\"class\": \"Directory\",\n\"location\": \"file:///home/jovyan/ogc-eo-application-package-hands-on/water-bodies/l9b37lie/S2B_10TFK_20210713_0_L2A\",\n\"basename\": \"S2B_10TFK_20210713_0_L2A\",\n\"listing\": [\n{\n\"class\": \"File\",\n\"location\": \"file:///home/jovyan/ogc-eo-application-package-hands-on/water-bodies/l9b37lie/S2B_10TFK_20210713_0_L2A/S2B_10TFK_20210713_0_L2A.json\",\n\"basename\": \"S2B_10TFK_20210713_0_L2A.json\",\n\"checksum\": \"sha1$fe3860a19aabba59561d1410070e1a2378769b4a\",\n\"size\": 4870,\n\"path\": \"/home/jovyan/ogc-eo-application-package-hands-on/water-bodies/l9b37lie/S2B_10TFK_20210713_0_L2A/S2B_10TFK_20210713_0_L2A.json\"\n},\n{\n\"class\": \"File\",\n\"location\": \"file:///home/jovyan/ogc-eo-application-package-hands-on/water-bodies/l9b37lie/S2B_10TFK_20210713_0_L2A/otsu.tif\",\n\"basename\": \"otsu.tif\",\n\"checksum\": \"sha1$4bc4935a02b7de7d2460d05b3a3c4bf92557b8d3\",\n\"size\": 99746,\n\"path\": \"/home/jovyan/ogc-eo-application-package-hands-on/water-bodies/l9b37lie/S2B_10TFK_20210713_0_L2A/otsu.tif\"\n}\n],\n\"path\": \"/home/jovyan/ogc-eo-application-package-hands-on/water-bodies/l9b37lie/S2B_10TFK_20210713_0_L2A\"\n}\n],\n\"path\": \"/home/jovyan/ogc-eo-application-package-hands-on/water-bodies/l9b37lie\"\n}\n}\n</code></pre>"},{"location":"execution-scenarios/alice/#result-inspection","title":"Result inspection","text":"<p>If you're running the Hands-on on Binder, you can inspect and plt the results with a Jupyter Notebook.</p> <p>The results are inspected and visualized with the <code>visualization.ipynb</code> notebook on JupyterLab by running all cells. This notebook uses pystac to access the geotiffs produced, leafmap to plot the tiles served by a local tile server.</p> <p>Technically, the notebook parses the results produced looking for the STAC Catalog file <code>catalog.json</code> and adds the STAC items' <code>data</code> asset on the map.</p>"},{"location":"execution-scenarios/bob/","title":"Bob","text":""},{"location":"execution-scenarios/bob/#water-bodies-detection-application-package-scripted-execution","title":"Water bodies detection Application Package scripted execution","text":"<p>Bob scripts the execution of the Application package</p> <p></p> <p>Alice included in the water bodies detection Application Package software repository a Continuous Integration configuration relying on Github Actions to:</p> <ul> <li>build the containers</li> <li>push the built containers to Github container registry</li> <li>update the Application Package with these new container references</li> <li>push the updated Application Package to Github's artifact registry</li> </ul> <p>Bob scripts the Application Execution. His environment has a container engine (e.g. docker) and the <code>cwltool</code> CWL runner.</p>"},{"location":"execution-scenarios/bob/#execution","title":"Execution","text":"<p>Bob checks latest Water bodies detection Application Package pushed by the Continuous Integration to the releases and either downloads the Application Package or runs it with an URL to a release.</p> <p>Bob uses an input dataset with two Sentinel-2 acquisitions:</p> Acquisitions Date 2021-07-13 2022-05-24 URL S2B_10TFK_20210713_0_L2A S2A_10TFK_20220524_0_L2A Quicklook"},{"location":"execution-scenarios/bob/#hands-on","title":"Hands-on","text":"<p>Once the Code Server instance is up, open a new Terminal and create the Python environments to run the Application Package steps:</p> <p><pre><code>mamba create -c conda-forge -y -p /srv/conda/envs/env_crop  gdal click pystac \nmamba create -c conda-forge -y -p /srv/conda/envs/env_norm_diff click gdal  \nmamba create -c conda-forge -y -p /srv/conda/envs/env_otsu gdal scikit-image click \nmamba create -c conda-forge -y -p /srv/conda/envs/env_stac click pystac python=3.9 pip &amp;&amp; \\\n    /srv/conda/envs/env_stac/bin/pip install rio_stac\nmamba clean --all -f -y\n</code></pre> This configuration step takes a few minutes to complete and prints:</p> <pre><code>jovyan@jupyter-cwl-2dfor-2deo-2dvscode-2dbinder-2dv5n1yyn4:~/ogc-eo-application-package-hands-on/water-bodies$ mamba create -c conda-forge -y -p /srv/conda/envs/env_crop  gdal click pystac \n-forge -y -p /srv/conda/envs/env_norm_diff click gdal  \nmamba create -c conda-forge -y -p /srv/conda/envs/env_otsu gdal scikit-image click \nmamba create -c conda-forge -y -p /srv/conda/envs/env_stac click pystac python=3.9 pip &amp;&amp; \\\n    /srv/conda/envs/env_stac/bin/pip install rio_stac\nmamba clean --all -f -y\n                  __    __    __    __\n                 /  \\  /  \\  /  \\  /  \\\n                /    \\/    \\/    \\/    \\\n\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588/  /\u2588\u2588/  /\u2588\u2588/  /\u2588\u2588/  /\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\n              /  / \\   / \\   / \\   / \\  \\____\n             /  /   \\_/   \\_/   \\_/   \\    o \\__,\n            / _/                       \\_____/  `\n            |/\n        \u2588\u2588\u2588\u2557   \u2588\u2588\u2588\u2557 \u2588\u2588\u2588\u2588\u2588\u2557 \u2588\u2588\u2588\u2557   \u2588\u2588\u2588\u2557\u2588\u2588\u2588\u2588\u2588\u2588\u2557  \u2588\u2588\u2588\u2588\u2588\u2557\n        \u2588\u2588\u2588\u2588\u2557 \u2588\u2588\u2588\u2588\u2551\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\u2588\u2588\u2588\u2588\u2557 \u2588\u2588\u2588\u2588\u2551\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\n        \u2588\u2588\u2554\u2588\u2588\u2588\u2588\u2554\u2588\u2588\u2551\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2551\u2588\u2588\u2554\u2588\u2588\u2588\u2588\u2554\u2588\u2588\u2551\u2588\u2588\u2588\u2588\u2588\u2588\u2554\u255d\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2551\n        \u2588\u2588\u2551\u255a\u2588\u2588\u2554\u255d\u2588\u2588\u2551\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2551\u2588\u2588\u2551\u255a\u2588\u2588\u2554\u255d\u2588\u2588\u2551\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2551\n        \u2588\u2588\u2551 \u255a\u2550\u255d \u2588\u2588\u2551\u2588\u2588\u2551  \u2588\u2588\u2551\u2588\u2588\u2551 \u255a\u2550\u255d \u2588\u2588\u2551\u2588\u2588\u2588\u2588\u2588\u2588\u2554\u255d\u2588\u2588\u2551  \u2588\u2588\u2551\n        \u255a\u2550\u255d     \u255a\u2550\u255d\u255a\u2550\u255d  \u255a\u2550\u255d\u255a\u2550\u255d     \u255a\u2550\u255d\u255a\u2550\u2550\u2550\u2550\u2550\u255d \u255a\u2550\u255d  \u255a\u2550\u255d\n\n        mamba (1.2.0) supported by @QuantStack\n\n        GitHub:  https://github.com/mamba-org/mamba\n        Twitter: https://twitter.com/QuantStack\n\n\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\n...\n\n...\n\nWill remove 1 package cache(s).\n</code></pre> <p>Open a Terminal and run:</p> <pre><code>python bob.py\n</code></pre> <p>This will print:</p> <pre><code>INFO bob.py 3.1.20221201130942\nINFO [workflow ] start\nINFO [workflow ] starting step node_water_bodies\nINFO [step node_water_bodies] start\nINFO [workflow node_water_bodies] start\nINFO [workflow node_water_bodies] starting step node_crop\nINFO [step node_crop] start\nINFO [job node_crop] /tmp/6n8apsoq$ python \\\n    -m \\\n    app \\\n    --aoi \\\n    -121.399,39.834,-120.74,40.472 \\\n    --band \\\n    green \\\n    --epsg \\\n    EPSG:4326 \\\n    --input-item \\\n    https://earth-search.aws.element84.com/v0/collections/sentinel-s2-l2a-cogs/items/S2B_10TFK_20210713_0_L2A\nINFO [job node_crop] Max memory used: 67MiB\nINFO [job node_crop] completed success\nINFO [step node_crop] start\nINFO [job node_crop_2] /tmp/k_9lm8he$ python \\\n    -m \\\n    app \\\n    --aoi \\\n    -121.399,39.834,-120.74,40.472 \\\n    --band \\\n    nir \\\n    --epsg \\\n    EPSG:4326 \\\n    --input-item \\\n    https://earth-search.aws.element84.com/v0/collections/sentinel-s2-l2a-cogs/items/S2B_10TFK_20210713_0_L2A\nINFO [job node_crop_2] Max memory used: 66MiB\nINFO [job node_crop_2] completed success\nINFO [step node_crop] completed success\nINFO [workflow node_water_bodies] starting step node_normalized_difference\nINFO [step node_normalized_difference] start\nINFO [job node_normalized_difference] /tmp/gksmem7n$ python \\\n    -m \\\n    app \\\n    /tmp/17glpf06/stgb6188a88-313c-4c6c-a97b-b485c4394cb3/crop_green.tif \\\n    /tmp/17glpf06/stgadfebda3-fff9-4bd4-bb96-2b79c812bf23/crop_nir.tif\nINFO [job node_normalized_difference] Max memory used: 273MiB\nINFO [job node_normalized_difference] completed success\nINFO [step node_normalized_difference] completed success\nINFO [workflow node_water_bodies] starting step node_otsu\nINFO [step node_otsu] start\nINFO [job node_otsu] /tmp/ir5klrom$ python \\\n    -m \\\n    app \\\n    /tmp/no594xke/stg7ff1069c-3ee3-4d42-bcd7-ccf82205eb58/norm_diff.tif\nINFO [job node_otsu] Max memory used: 60MiB\nINFO [job node_otsu] completed success\nINFO [step node_otsu] completed success\nINFO [workflow node_water_bodies] completed success\nINFO [step node_water_bodies] start\nINFO [workflow node_water_bodies_2] start\nINFO [workflow node_water_bodies_2] starting step node_crop_2\nINFO [step node_crop_2] start\nINFO [job node_crop_3] /tmp/0ocyq5md$ python \\\n    -m \\\n    app \\\n    --aoi \\\n    -121.399,39.834,-120.74,40.472 \\\n    --band \\\n    green \\\n    --epsg \\\n    EPSG:4326 \\\n    --input-item \\\n    https://earth-search.aws.element84.com/v0/collections/sentinel-s2-l2a-cogs/items/S2A_10TFK_20220524_0_L2A\nINFO [job node_crop_3] Max memory used: 67MiB\nINFO [job node_crop_3] completed success\nINFO [step node_crop_2] start\nINFO [job node_crop_4] /tmp/u0uvyo87$ python \\\n    -m \\\n    app \\\n    --aoi \\\n    -121.399,39.834,-120.74,40.472 \\\n    --band \\\n    nir \\\n    --epsg \\\n    EPSG:4326 \\\n    --input-item \\\n    https://earth-search.aws.element84.com/v0/collections/sentinel-s2-l2a-cogs/items/S2A_10TFK_20220524_0_L2A\nINFO [job node_crop_4] Max memory used: 66MiB\nINFO [job node_crop_4] completed success\nINFO [step node_crop_2] completed success\nINFO [workflow node_water_bodies_2] starting step node_normalized_difference_2\nINFO [step node_normalized_difference_2] start\nINFO [job node_normalized_difference_2] /tmp/klj25q69$ python \\\n    -m \\\n    app \\\n    /tmp/it1t00w7/stgad3e6991-667e-4726-894f-7719d56020de/crop_green.tif \\\n    /tmp/it1t00w7/stgc43022ad-babd-479e-98c2-61f5c1bd25fa/crop_nir.tif\nINFO [job node_normalized_difference_2] Max memory used: 781MiB\nINFO [job node_normalized_difference_2] completed success\nINFO [step node_normalized_difference_2] completed success\nINFO [workflow node_water_bodies_2] starting step node_otsu_2\nINFO [step node_otsu_2] start\nINFO [job node_otsu_2] /tmp/3p5hbt32$ python \\\n    -m \\\n    app \\\n    /tmp/ftopy3mv/stgc969ba01-2f50-4035-b946-d693680cbb7c/norm_diff.tif\nINFO [job node_otsu_2] Max memory used: 58MiB\nINFO [job node_otsu_2] completed success\nINFO [step node_otsu_2] completed success\nINFO [workflow node_water_bodies_2] completed success\nINFO [step node_water_bodies] completed success\nINFO [workflow ] starting step node_stac\nINFO [step node_stac] start\nINFO [job node_stac] /tmp/37zde3p4$ python \\\n    -m \\\n    app \\\n    --input-item \\\n    https://earth-search.aws.element84.com/v0/collections/sentinel-s2-l2a-cogs/items/S2B_10TFK_20210713_0_L2A \\\n    --water-body \\\n    /tmp/fd0l65gi/stg9de20acd-1158-4ac3-be6d-a30e00996fd3/otsu.tif \\\n    --input-item \\\n    https://earth-search.aws.element84.com/v0/collections/sentinel-s2-l2a-cogs/items/S2A_10TFK_20220524_0_L2A \\\n    --water-body \\\n    /tmp/fd0l65gi/stg8bc3674f-f313-4f79-9dee-5a3bb454f2fb/otsu.tif\nINFO [job node_stac] Max memory used: 58MiB\nINFO [job node_stac] completed success\nINFO [step node_stac] completed success\nINFO [workflow ] completed success\nINFO Final process status is success\n* &lt;Catalog id=catalog&gt;\n  * &lt;Item id=S2B_10TFK_20210713_0_L2A&gt;\n  * &lt;Item id=S2A_10TFK_20220524_0_L2A&gt;\n</code></pre>"},{"location":"execution-scenarios/bob/#execution-with-containers-requires-docker","title":"Execution with containers - requires docker","text":"<p>The file <code>params.yml</code> contains the parameters:</p> <pre><code>stac_items:\n- \"https://earth-search.aws.element84.com/v0/collections/sentinel-s2-l2a-cogs/items/S2B_10TFK_20210713_0_L2A\"\n- \"https://earth-search.aws.element84.com/v0/collections/sentinel-s2-l2a-cogs/items/S2A_10TFK_20220524_0_L2A\"\n\naoi: \"-121.399,39.834,-120.74,40.472\"\nepsg: \"EPSG:4326\"\n</code></pre> <p>Then</p> <pre><code>cwltool https://github.com/Terradue/ogc-eo-application-package-hands-on/releases/download/1.1.6/app-water-bodies.1.1.6.cwl#water_bodies params.yml\n</code></pre> <p>Note <code>#water_bodies</code> is the anchor for the entry point in the Application Package.</p> <p>This triggers the Application Package execution and it will print:</p> <pre><code>$ cwltool https://github.com/Terradue/ogc-eo-application-package-hands-on/releases/download/1.1.6/app-water-bodies.1.1.6.cwl#water_bodies water-bodies/params.yml\n[2023-01-17 08:56:05] INFO /srv/conda/bin/cwltool 3.1.20221027224946\n[2023-01-17 08:56:07] INFO [workflow ] start\n[2023-01-17 08:56:07] INFO [workflow ] starting step node_water_bodies\n[2023-01-17 08:56:07] INFO [step node_water_bodies] start\n[2023-01-17 08:56:07] INFO [workflow node_water_bodies] start\n[2023-01-17 08:56:07] INFO [workflow node_water_bodies] starting step node_crop\n[2023-01-17 08:56:07] INFO [step node_crop] start\n[2023-01-17 08:56:07] INFO ['docker', 'pull', 'ghcr.io/terradue/ogc-eo-application-package-hands-on/crop:1.1.6']\n1.1.6: Pulling from terradue/ogc-eo-application-package-hands-on/crop\na603fa5e3b41: Already exists \nf4e6c07683b9: Pull complete \nc8d9f3f6fdb9: Pull complete \na54a0971e64a: Pull complete \na4a2977839e7: Pull complete \n02c6daa3b749: Pull complete \n4f4fb700ef54: Pull complete \n86f40045fa70: Pull complete \n828182a9456e: Pull complete \n9a8388eaf351: Pull complete \nd22e3d657f8a: Pull complete \n94131a1ca8d1: Pull complete \nf294e065ad00: Pull complete \neae1e9c88d17: Pull complete \n915c6c1827e8: Pull complete \ne26bfec68ea6: Pull complete \n26b76c6b56da: Pull complete \nDigest: sha256:b9d24d2467448a401ea62e8b2e258a10a36dcd4a8a412554e134686631ab6dbb\nStatus: Downloaded newer image for ghcr.io/terradue/ogc-eo-application-package-hands-on/crop:1.1.6\nghcr.io/terradue/ogc-eo-application-package-hands-on/crop:1.1.6\n[2023-01-17 08:57:54] WARNING [job node_crop] Skipping Docker software container '--memory' limit despite presence of ResourceRequirement with ramMin and/or ramMax setting. Consider running with --strict-memory-limit for increased portability assurance.\n[2023-01-17 08:57:54] WARNING [job node_crop] Skipping Docker software container '--cpus' limit despite presence of ResourceRequirement with coresMin and/or coresMax setting. Consider running with --strict-cpu-limit for increased portability assurance.\n[2023-01-17 08:57:54] INFO [job node_crop] /tmp/d_p8fm89$ docker \\\n    run \\\n    -i \\\n    --mount=type=bind,source=/tmp/d_p8fm89,target=/UqhtEY \\\n    --mount=type=bind,source=/tmp/n1td4efj,target=/tmp \\\n    --workdir=/UqhtEY \\\n    --read-only=true \\\n    --user=1000:1000 \\\n    --rm \\\n    --cidfile=/tmp/2ssyfxjr/20230117085754-446538.cid \\\n    --env=TMPDIR=/tmp \\\n    --env=HOME=/UqhtEY \\\n    --env=PATH=/srv/conda/envs/env_crop/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin \\\n    --env=PROJ_LIB=/srv/conda/envs/env_crop/share/proj/ \\\n    --env=PYTHONPATH=/workspaces/vscode-binder/command-line-tools/crop:/home/jovyan/water-bodies/command-line-tools/crop \\\n    ghcr.io/terradue/ogc-eo-application-package-hands-on/crop:1.1.6 \\\n    python \\\n    -m \\\n    app \\\n    --aoi \\\n    -121.399,39.834,-120.74,40.472 \\\n    --band \\\n    green \\\n    --epsg \\\n    EPSG:4326 \\\n    --input-item \\\n    https://earth-search.aws.element84.com/v0/collections/sentinel-s2-l2a-cogs/items/S2B_10TFK_20210713_0_L2A\n[2023-01-17 08:58:35] INFO [job node_crop] Max memory used: 236MiB\n[2023-01-17 08:58:35] INFO [job node_crop] completed success\n...\n</code></pre> <p>To finally print a manifest with the files and directories produced:</p> <pre><code>{\n\"stac_catalog\": {\n\"location\": \"file:///data/work/ogc-eo-application-package-hands-on/vm8zy5nm\",\n\"basename\": \"vm8zy5nm\",\n\"class\": \"Directory\",\n\"listing\": [\n{\n\"class\": \"Directory\",\n\"location\": \"file:///data/work/ogc-eo-application-package-hands-on/vm8zy5nm/S2A_10TFK_20220524_0_L2A\",\n\"basename\": \"S2A_10TFK_20220524_0_L2A\",\n\"listing\": [\n{\n\"class\": \"File\",\n\"location\": \"file:///data/work/ogc-eo-application-package-hands-on/vm8zy5nm/S2A_10TFK_20220524_0_L2A/S2A_10TFK_20220524_0_L2A.json\",\n\"basename\": \"S2A_10TFK_20220524_0_L2A.json\",\n\"checksum\": \"sha1$de27e30c1e40ac0c2cb41f66f25e0258f4a6fdbc\",\n\"size\": 4870,\n\"path\": \"/data/work/ogc-eo-application-package-hands-on/vm8zy5nm/S2A_10TFK_20220524_0_L2A/S2A_10TFK_20220524_0_L2A.json\"\n},\n{\n\"class\": \"File\",\n\"location\": \"file:///data/work/ogc-eo-application-package-hands-on/vm8zy5nm/S2A_10TFK_20220524_0_L2A/otsu.tif\",\n\"basename\": \"otsu.tif\",\n\"checksum\": \"sha1$f8b7daf9c86b0271a813a0948e0edb947e5f2773\",\n\"size\": 175932,\n\"path\": \"/data/work/ogc-eo-application-package-hands-on/vm8zy5nm/S2A_10TFK_20220524_0_L2A/otsu.tif\"\n}\n],\n\"path\": \"/data/work/ogc-eo-application-package-hands-on/vm8zy5nm/S2A_10TFK_20220524_0_L2A\"\n},\n{\n\"class\": \"Directory\",\n\"location\": \"file:///data/work/ogc-eo-application-package-hands-on/vm8zy5nm/S2B_10TFK_20210713_0_L2A\",\n\"basename\": \"S2B_10TFK_20210713_0_L2A\",\n\"listing\": [\n{\n\"class\": \"File\",\n\"location\": \"file:///data/work/ogc-eo-application-package-hands-on/vm8zy5nm/S2B_10TFK_20210713_0_L2A/S2B_10TFK_20210713_0_L2A.json\",\n\"basename\": \"S2B_10TFK_20210713_0_L2A.json\",\n\"checksum\": \"sha1$fe3860a19aabba59561d1410070e1a2378769b4a\",\n\"size\": 4870,\n\"path\": \"/data/work/ogc-eo-application-package-hands-on/vm8zy5nm/S2B_10TFK_20210713_0_L2A/S2B_10TFK_20210713_0_L2A.json\"\n},\n{\n\"class\": \"File\",\n\"location\": \"file:///data/work/ogc-eo-application-package-hands-on/vm8zy5nm/S2B_10TFK_20210713_0_L2A/otsu.tif\",\n\"basename\": \"otsu.tif\",\n\"checksum\": \"sha1$4bc4935a02b7de7d2460d05b3a3c4bf92557b8d3\",\n\"size\": 99746,\n\"path\": \"/data/work/ogc-eo-application-package-hands-on/vm8zy5nm/S2B_10TFK_20210713_0_L2A/otsu.tif\"\n}\n],\n\"path\": \"/data/work/ogc-eo-application-package-hands-on/vm8zy5nm/S2B_10TFK_20210713_0_L2A\"\n},\n{\n\"class\": \"File\",\n\"location\": \"file:///data/work/ogc-eo-application-package-hands-on/vm8zy5nm/catalog.json\",\n\"basename\": \"catalog.json\",\n\"checksum\": \"sha1$f7214df9b2be4df8b704b4bbe73cdf76b30b0ca6\",\n\"size\": 525,\n\"path\": \"/data/work/ogc-eo-application-package-hands-on/vm8zy5nm/catalog.json\"\n}\n],\n\"path\": \"/data/work/ogc-eo-application-package-hands-on/vm8zy5nm\"\n}\n}\n</code></pre>"},{"location":"execution-scenarios/bob/#exploring-the-results","title":"Exploring the results","text":"<p>There is an element that lists the path to the STAC Catalog, this is the entry point to discover the results generated: </p> <pre><code>{\n\"class\": \"File\",\n\"location\": \"file:///data/work/ogc-eo-application-package-hands-on/vm8zy5nm/catalog.json\",\n\"basename\": \"catalog.json\",\n\"checksum\": \"sha1$f7214df9b2be4df8b704b4bbe73cdf76b30b0ca6\",\n\"size\": 525,\n\"path\": \"/data/work/ogc-eo-application-package-hands-on/vm8zy5nm/catalog.json\"\n}\n</code></pre> <p>The results can be explored using Python and the pystac library:</p> <pre><code>Python 3.9.13 | packaged by conda-forge | (main, May 27 2022, 16:58:50) \n[GCC 10.3.0] on linux\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n&gt;&gt;&gt; import pystac\n&gt;&gt;&gt; cat = pystac.read_file(\"/data/work/ogc-eo-application-package-hands-on/vm8zy5nm/catalog.json\")\n&gt;&gt;&gt; cat.describe()\n* &lt;Catalog id=catalog&gt;\n  * &lt;Item id=S2B_10TFK_20210713_0_L2A&gt;\n  * &lt;Item id=S2A_10TFK_20220524_0_L2A&gt;\n&gt;&gt;&gt; \n</code></pre>"},{"location":"execution-scenarios/bob/#scaling-up-the-processing-resources","title":"Scaling-up the processing resources","text":"<p>The scripted execution can also be done on a kubernetes cluster using the calrissian CWL runner. </p> <p>The kubernetes setup can be supported using From zero to CWL on Kubernetes. </p>"},{"location":"execution-scenarios/eric/","title":"Eric","text":""},{"location":"execution-scenarios/eric/#water-bodies-detection-application-package-deployment-and-execution-on-a-platform","title":"Water bodies detection Application Package deployment and execution on a Platform","text":"<p>Eric deploys the application package on a Platform</p> <p></p>"},{"location":"execution-scenarios/eric/#application-package-deployment","title":"Application Package deployment","text":"<p>Eric get Alice's Application Package latest release from releases</p> <p>Eric uses <code>curl</code> to submit a POST request to an OGC API Processes endpoint to deploy the Application Package with: </p> <pre><code>curl --location --request POST 'https://myades.com/eric/wps3/processes' \\\n--header 'Content-Type: application/json' \\\n--data-raw '{\n  \"executionUnit\": {\n    \"href\": \"https://github.com/Terradue/ogc-eo-application-package-hands-on/releases/download/1.1.6/app-water-bodies.1.1.6.cwl#water_bodies\",\n    \"type\": \"application/cwl\"\n  }\n}'\n</code></pre> <p>The output is:</p> <pre><code>{\n\"id\": \"water_bodies-1_1_6\",\n\"title\": \"Water bodies detection based on NDWI and otsu threshold\",\n\"description\": \"Water bodies detection based on NDWI and otsu threshold\",\n\"mutable\": true,\n\"version\": \"1.1.6\",\n\"outputTransmission\": [\n\"value\",\n\"reference\"\n],\n\"jobControlOptions\": [\n\"async-execute\"\n],\n\"links\": [\n{\n\"rel\": \"http://www.opengis.net/def/rel/ogc/1.0/execute\",\n\"type\": \"application/json\",\n\"title\": \"Execute End Point\",\n\"href\": \"/eric/wps3/processes/water_bodies-1_1_6/execution\"\n}\n]\n}\n</code></pre> <p>The platform exposes an OGC API Processes processing service. Eric can check the newly deployed OCG API Processes process description: </p> <pre><code>curl --location --request GET 'http://myades.com/eoepca/wps3/processes/water_bodies-1_1_6' \\\n--header 'Content-Type: application/json'\n</code></pre> <p>The output newly deployed OCG API Processes process description:</p> <pre><code>{\n\"id\": \"water_bodies-1_1_6\",\n\"title\": \"Water bodies detection based on NDWI and otsu threshold\",\n\"description\": \"Water bodies detection based on NDWI and otsu threshold\",\n\"mutable\": true,\n\"version\": \"1.1.6\",\n\"outputTransmission\": [\n\"value\",\n\"reference\"\n],\n\"jobControlOptions\": [\n\"async-execute\"\n],\n\"links\": [\n{\n\"rel\": \"http://www.opengis.net/def/rel/ogc/1.0/execute\",\n\"type\": \"application/json\",\n\"title\": \"Execute End Point\",\n\"href\": \"/eoepca/wps3/processes/water_bodies-1_1_6/execution\"\n}\n],\n\"inputs\": {\n\"aoi\": {\n\"title\": \"area of interest\",\n\"description\": \"area of interest as a bounding box\",\n\"schema\": {\n\"type\": \"string\",\n\"default\": \"Any value\"\n}\n},\n\"epsg\": {\n\"title\": \"EPSG code\",\n\"description\": \"EPSG code\",\n\"schema\": {\n\"type\": \"string\",\n\"default\": \"Any value\"\n}\n},\n\"stac_items\": {\n\"title\": \"Sentinel-2 STAC items\",\n\"description\": \"list of Sentinel-2 COG STAC items\",\n\"maxOccurs\": 999,\n\"schema\": {\n\"type\": \"string\",\n\"default\": \"Any value\"\n}\n}\n},\n\"outputs\": {\n\"wf_outputs\": {\n\"title\": \"wf_outputs\",\n\"extended-schema\": {\n\"oneOf\": [\n{\n\"allOf\": [\n{\n\"$ref\": \"http://zoo-project.org/dl/link.json\"\n},\n{\n\"type\": \"object\",\n\"properties\": {\n\"type\": {\n\"enum\": [\n\"application/json\"\n]\n}\n}\n}\n]\n},\n{\n\"type\": \"object\",\n\"required\": [\n\"value\"\n],\n\"properties\": {\n\"value\": {\n\"oneOf\": [\n{\n\"type\": \"object\"\n}\n]\n}\n}\n}\n]\n},\n\"schema\": {\n\"oneOf\": [\n{\n\"type\": \"object\"\n}\n]\n}\n}\n}\n}\n</code></pre>"},{"location":"execution-scenarios/eric/#process-execution","title":"Process execution","text":"<p>Eric uses the input dataset with two Sentinel-2 acquisitions:</p> Acquisitions Date 2021-07-13 2022-05-24 URL S2B_10TFK_20210713_0_L2A S2A_10TFK_20220524_0_L2A Quicklook <p>Eric uses <code>curl</code> to submit an execution request:</p> <pre><code>curl --location --request POST 'http://myades.com/eoepca/wps3/processes/water_bodies-1_1_6/execution' \\\n--header 'Content-Type: application/json' \\\n--header 'Prefer: respond-async' \\\n--data-raw '{\n    \"inputs\": {\n        \"stac_items\": [\n            \"https://earth-search.aws.element84.com/v0/collections/sentinel-s2-l2a-cogs/items/S2B_10TFK_20210713_0_L2A\",\n            \"https://earth-search.aws.element84.com/v0/collections/sentinel-s2-l2a-cogs/items/S2A_10TFK_20220524_0_L2A\"\n        ],\n        \"aoi\": \"-121.399,39.834,-120.74,40.472\",\n        \"epsg\": \"EPSG:4326\"\n    }\n}'\n</code></pre> <p>The response includes a Location header with the url to the get status call of the job:</p> <pre><code>Location: /eric/wps3/jobs/f2a94e0e-967c-11ed-9857-623b8349c04f\n</code></pre> <p>Using the above location header url, Eric monitors the status the submitted job.</p> <pre><code>curl --location --request GET 'http://myades.com/eric/wps3/jobs/f2a94e0e-967c-11ed-9857-623b8349c04f'\n</code></pre> <p>The output is:</p> <pre><code>{\n\"progress\": 50,\n\"jobID\": \"f2a94e0e-967c-11ed-9857-623b8349c04f\",\n\"status\": \"running\",\n\"message\": \"running\",\n\"links\": [\n{\n\"title\": \"Status location\",\n\"rel\": \"status\",\n\"type\": \"application/json\",\n\"href\": \"/eric/wps3/jobs/f2a94e0e-967c-11ed-9857-623b8349c04f\"\n}\n]\n}\n</code></pre> <p>Once the job is completed, Eric uses <code>curl</code> to check the result:</p> <pre><code>curl --location --request GET 'http://myades.com/eric/wps3/jobs/f2a94e0e-967c-11ed-9857-623b8349c04f/results' \\\n</code></pre> <p>The output is:</p> <pre><code>{\n\"s3_catalog_output\": \"s3://processing-results/wf-f2a94e0e-967c-11ed-9857-623b8349c04f/catalog.json\",\n}\n</code></pre>"}]}